{"version":3,"sources":["components/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["CustomModal","_Component","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","handleChange","e","_e$target","target","name","value","type","checked","activeItem","_objectSpread","state","_defineProperty","setState","_inherits","_createClass","key","_this2","_this$props","toggle","onSave","React","createElement","Modal","isOpen","ModalHeader","ModalBody","Form","FormGroup","Label","for","Input","id","title","onChange","placeholder","description","check","completed","ModalFooter","Button","color","onClick","Component","axios","defaults","xsrfCookieName","xsrfHeaderName","App","refreshList","get","then","res","todoList","data","catch","err","console","log","modal","handleSubmit","item","put","concat","post","deleteItem","delete","createItem","editItem","displayCompleted","status","viewCompleted","renderTabList","className","renderItems","filter","map","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.26e68eee.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n} from \"reactstrap\";\r\n\r\nexport default class CustomModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeItem: this.props.activeItem,\r\n    };\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    let { name, value } = e.target;\r\n\r\n    if (e.target.type === \"checkbox\") {\r\n      value = e.target.checked;\r\n    }\r\n\r\n    const activeItem = { ...this.state.activeItem, [name]: value };\r\n\r\n    this.setState({ activeItem });\r\n  };\r\n\r\n  render() {\r\n    const { toggle, onSave } = this.props;\r\n\r\n    return (\r\n      <Modal isOpen={true} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>Todo Item</ModalHeader>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup>\r\n              <Label for=\"todo-title\">Title</Label>\r\n              <Input\r\n                type=\"text\"\r\n                id=\"todo-title\"\r\n                name=\"title\"\r\n                value={this.state.activeItem.title}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Enter Todo Title\"\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"todo-description\">Description</Label>\r\n              <Input\r\n                type=\"text\"\r\n                id=\"todo-description\"\r\n                name=\"description\"\r\n                value={this.state.activeItem.description}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Enter Todo description\"\r\n              />\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input\r\n                  type=\"checkbox\"\r\n                  name=\"completed\"\r\n                  checked={this.state.activeItem.completed}\r\n                  onChange={this.handleChange}\r\n                />\r\n                Completed\r\n              </Label>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"success\"\r\n            onClick={() => onSave(this.state.activeItem)}\r\n          >\r\n            Save\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}","import './App.css';import React, { Component } from \"react\";\r\nimport Modal from \"./components/Modal\";\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.xsrfCookieName = 'csrftoken'\r\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      viewCompleted: false,\r\n      todoList: [],\r\n      modal: false,\r\n      activeItem: {\r\n      title: \"\",\r\n      description: \"\",\r\n      completed: false,\r\n      }\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.refreshList();\r\n  };\r\n\r\n  refreshList = () => {\r\n    axios\r\n      .get(\"http://localhost:8000/api/todos/\")\r\n      .then((res) => this.setState({ todoList: res.data }))\r\n      .catch((err) => console.log(err));\r\n  };\r\n    toggle = () => {\r\n        this.setState({ modal: !this.state.modal });\r\n    };\r\n\r\n    handleSubmit = (item) => {\r\n        this.toggle();\r\n        if (item.id) {\r\n            axios\r\n                .put(`http://localhost:8000/api/todos/${item.id}/`, item)\r\n                .then((res) => this.refreshList());\r\n            return;\r\n        }\r\n        axios\r\n        .post(\"http://localhost:8000/api/todos/\", item)\r\n        .then((res) => this.refreshList());\r\n\r\n    };\r\n\r\n\r\n\r\n deleteItem = (item) => {\r\n  axios\r\n    .delete(`http://localhost:8000/api/todos/${item.id}`)\r\n    .then((res) => this.refreshList())\r\n    .catch((err) => console.log(err));\r\n    };\r\n\r\n\r\n\r\n  createItem = () => {\r\n        const item = { title: \"\", description: \"\", completed: false };\r\n        this.setState({ activeItem: item, modal: !this.state.modal });\r\n  };\r\n\r\n  editItem = (item) => {\r\n        this.setState({ activeItem: item, modal: !this.state.modal });\r\n  };\r\n\r\n\r\n  displayCompleted = (status) => {\r\n    if (status) {\r\n      return this.setState({ viewCompleted: true });\r\n    }\r\n    return this.setState({ viewCompleted: false });\r\n  };\r\n\r\n  renderTabList = () => {\r\n    return (\r\n      <div className=\"nav nav-tabs\">\r\n        <span\r\n          className={this.state.viewCompleted ? \"nav-link active\" : \"nav-link\"}\r\n          onClick={() => this.displayCompleted(true)}\r\n        >\r\n          Complete\r\n        </span>\r\n        <span\r\n          className={this.state.viewCompleted ? \"nav-link\" : \"nav-link active\"}\r\n          onClick={() => this.displayCompleted(false)}\r\n        >\r\n          Incomplete\r\n        </span>\r\n      </div>\r\n    );\r\n  };\r\n\r\nrenderItems = () => {\r\n    const { viewCompleted } = this.state;\r\n    const newItems = this.state.todoList.filter(\r\n      (item) => item.completed === viewCompleted\r\n    );\r\n\r\n    return newItems.map((item) => (\r\n      <li\r\n        key={item.id}\r\n        className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n      >\r\n        <span\r\n          className={`todo-title mr-2 ${\r\n            this.state.viewCompleted ? \"completed-todo\" : \"\"\r\n          }`}\r\n          title={item.description}\r\n        >\r\n          {item.title}\r\n        </span>\r\n\r\n        <span>\r\n          <button\r\n            className=\"btn btn-secondary mr-2\"\r\n            onClick = {() => this.editItem(item)}\r\n          >\r\n            Edit\r\n          </button>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick = {() => this.deleteItem(item)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </span>\r\n      </li>\r\n    ));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <main className=\"container\">\r\n        <h1 className=\"text-white text-uppercase text-center my-4\">Todo app</h1>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\r\n            <div className=\"card p-3\">\r\n              <div className=\"mb-4\">\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick = {this.createItem}\r\n                >\r\n                  Add task\r\n                </button>\r\n              </div>\r\n              {this.renderTabList()}\r\n              <ul className=\"list-group list-group-flush border-top-0\">\r\n                {this.renderItems()}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {this.state.modal ? (\r\n        <Modal\r\n            activeItem={this.state.activeItem}\r\n            toggle={this.toggle}\r\n            onSave={this.handleSubmit}\r\n            />\r\n            ) : null}\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}